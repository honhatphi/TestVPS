// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trackify.Data;

#nullable disable

namespace Trackify.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250310084316_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Trackify.Data.Type.InboundOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at_utc")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateOnly?>("InvoiceDate")
                        .HasColumnType("date")
                        .HasColumnName("invoice_date");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("invoice_no");

                    b.Property<bool>("IsNonStorage")
                        .HasColumnType("bit")
                        .HasColumnName("is_non_storage");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int")
                        .HasColumnName("partner_id");

                    b.Property<int>("PeriodId")
                        .HasColumnType("int")
                        .HasColumnName("period_id");

                    b.Property<DateOnly>("PostingDate")
                        .HasColumnType("date")
                        .HasColumnName("posting_date");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reason");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at_utc");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_inbound_orders");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("ix_inbound_orders_code");

                    b.HasIndex("PartnerId")
                        .HasDatabaseName("ix_inbound_orders_partner_id");

                    b.HasIndex("PeriodId")
                        .HasDatabaseName("ix_inbound_orders_period_id");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("ix_inbound_orders_project_id");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_inbound_orders_reference_id");

                    b.HasIndex("SupplierId")
                        .HasDatabaseName("ix_inbound_orders_supplier_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_inbound_orders_user_id");

                    b.ToTable("inbound_orders", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.InboundOrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<int>("InboundOrderId")
                        .HasColumnType("int")
                        .HasColumnName("inbound_order_id");

                    b.Property<int>("PalletId")
                        .HasColumnType("int")
                        .HasColumnName("pallet_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("quantity");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.HasKey("Id")
                        .HasName("pk_inbound_order_lines");

                    b.HasIndex("InboundOrderId")
                        .HasDatabaseName("ix_inbound_order_lines_inbound_order_id");

                    b.HasIndex("PalletId")
                        .HasDatabaseName("ix_inbound_order_lines_pallet_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_inbound_order_lines_product_id");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_inbound_order_lines_reference_id");

                    b.ToTable("inbound_order_lines", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tax_code");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_organizations");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_organizations_reference_id");

                    b.ToTable("organizations", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.OutboundOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at_utc")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<bool>("IsNonStorage")
                        .HasColumnType("bit")
                        .HasColumnName("is_non_storage");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int")
                        .HasColumnName("partner_id");

                    b.Property<int>("PeriodId")
                        .HasColumnType("int")
                        .HasColumnName("period_id");

                    b.Property<DateOnly>("PostingDate")
                        .HasColumnType("date")
                        .HasColumnName("posting_date");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reason");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at_utc");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_outbound_orders");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("ix_outbound_orders_code");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_outbound_orders_customer_id");

                    b.HasIndex("PartnerId")
                        .HasDatabaseName("ix_outbound_orders_partner_id");

                    b.HasIndex("PeriodId")
                        .HasDatabaseName("ix_outbound_orders_period_id");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("ix_outbound_orders_project_id");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_outbound_orders_reference_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_outbound_orders_user_id");

                    b.ToTable("outbound_orders", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.OutboundOrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<int>("OutboundOrderId")
                        .HasColumnType("int")
                        .HasColumnName("outbound_order_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("quantity");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.HasKey("Id")
                        .HasName("pk_outbound_order_lines");

                    b.HasIndex("OutboundOrderId")
                        .HasDatabaseName("ix_outbound_order_lines_outbound_order_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_outbound_order_lines_product_id");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_outbound_order_lines_reference_id");

                    b.ToTable("outbound_order_lines", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.Pallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("location_id");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("order_number");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_pallets");

                    b.HasIndex("LocationId")
                        .HasDatabaseName("ix_pallets_location_id");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_pallets_reference_id");

                    b.ToTable("pallets", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.PalletContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<int>("InboundOrderId")
                        .HasColumnType("int")
                        .HasColumnName("inbound_order_id");

                    b.Property<int>("PalletId")
                        .HasColumnType("int")
                        .HasColumnName("pallet_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("quantity");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.HasKey("Id")
                        .HasName("pk_pallet_contents");

                    b.HasIndex("InboundOrderId")
                        .HasDatabaseName("ix_pallet_contents_inbound_order_id");

                    b.HasIndex("PalletId")
                        .HasDatabaseName("ix_pallet_contents_pallet_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_pallet_contents_product_id");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_pallet_contents_reference_id");

                    b.ToTable("pallet_contents", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.PalletMovementLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<int?>("DestinationLocationId")
                        .HasColumnType("int")
                        .HasColumnName("destination_location_id");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("ended_at");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("OrderType")
                        .HasColumnType("int")
                        .HasColumnName("order_type");

                    b.Property<int>("OriginOrderId")
                        .HasColumnType("int")
                        .HasColumnName("origin_order_id");

                    b.Property<int>("PalletId")
                        .HasColumnType("int")
                        .HasColumnName("pallet_id");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int?>("SourceLocationId")
                        .HasColumnType("int")
                        .HasColumnName("source_location_id");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("started_at");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_pallet_movement_logs");

                    b.HasIndex("DestinationLocationId")
                        .HasDatabaseName("ix_pallet_movement_logs_destination_location_id");

                    b.HasIndex("OriginOrderId")
                        .HasDatabaseName("ix_pallet_movement_logs_origin_order_id");

                    b.HasIndex("PalletId")
                        .HasDatabaseName("ix_pallet_movement_logs_pallet_id");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_pallet_movement_logs_reference_id");

                    b.HasIndex("SourceLocationId")
                        .HasDatabaseName("ix_pallet_movement_logs_source_location_id");

                    b.ToTable("pallet_movement_logs", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.PartnerProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_partner_projects");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_partner_projects_reference_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_partner_projects_user_id");

                    b.ToTable("partner_projects", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("barcode");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_products_reference_id");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.SequenceNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<int>("NextValue")
                        .HasColumnType("int")
                        .HasColumnName("next_value");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.HasKey("Id")
                        .HasName("pk_sequence_numbers");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_sequence_numbers_reference_id");

                    b.ToTable("sequence_numbers", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.StockLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<decimal>("BeginningQuantity")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("beginning_quantity");

                    b.Property<decimal>("EndingQuantity")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ending_quantity");

                    b.Property<decimal>("InboundQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("inbound_quantity");

                    b.Property<decimal>("OtherInboundQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("other_inbound_quantity");

                    b.Property<decimal>("OtherOutboundQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("other_outbound_quantity");

                    b.Property<decimal>("OutboundQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("outbound_quantity");

                    b.Property<int>("PeriodId")
                        .HasColumnType("int")
                        .HasColumnName("period_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.HasKey("Id")
                        .HasName("pk_stock_levels");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_stock_levels_product_id");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("ix_stock_levels_project_id");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_stock_levels_reference_id");

                    b.HasIndex("PeriodId", "ProductId")
                        .IsUnique()
                        .HasDatabaseName("ix_stock_levels_period_id_product_id");

                    b.ToTable("stock_levels", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.StockTakePeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit")
                        .HasColumnName("is_closed");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("organization_id");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.HasKey("Id")
                        .HasName("pk_stock_take_periods");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("ix_stock_take_periods_organization_id");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_stock_take_periods_reference_id");

                    b.ToTable("stock_take_periods", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.SystemConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("key");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_system_configurations");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_system_configurations_reference_id");

                    b.ToTable("system_configurations", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("display_name");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("is_admin");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit")
                        .HasColumnName("is_locked");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("organization_id");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password_hash");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("ix_users_organization_id");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_users_reference_id");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("ix_users_username");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.WarehouseLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1000L);

                    b.Property<int>("Bin")
                        .HasColumnType("int")
                        .HasColumnName("bin");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("organization_id");

                    b.Property<int>("Rack")
                        .HasColumnType("int")
                        .HasColumnName("rack");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Row")
                        .HasColumnType("int")
                        .HasColumnName("row");

                    b.Property<int>("Shelf")
                        .HasColumnType("int")
                        .HasColumnName("shelf");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_warehouse_locations");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("ix_warehouse_locations_code");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("ix_warehouse_locations_organization_id");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("ix_warehouse_locations_reference_id");

                    b.ToTable("warehouse_locations", (string)null);
                });

            modelBuilder.Entity("Trackify.Data.Type.InboundOrder", b =>
                {
                    b.HasOne("Trackify.Data.Type.Organization", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_inbound_orders_organizations_partner_id");

                    b.HasOne("Trackify.Data.Type.StockTakePeriod", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_inbound_orders_stock_take_periods_period_id");

                    b.HasOne("Trackify.Data.Type.PartnerProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_inbound_orders_partner_projects_project_id");

                    b.HasOne("Trackify.Data.Type.Organization", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_inbound_orders_organizations_supplier_id");

                    b.HasOne("Trackify.Data.Type.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_inbound_orders_users_user_id");

                    b.Navigation("Partner");

                    b.Navigation("Period");

                    b.Navigation("Project");

                    b.Navigation("Supplier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Trackify.Data.Type.InboundOrderLine", b =>
                {
                    b.HasOne("Trackify.Data.Type.InboundOrder", "InboundOrder")
                        .WithMany("OrderLines")
                        .HasForeignKey("InboundOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_inbound_order_lines_inbound_orders_inbound_order_id");

                    b.HasOne("Trackify.Data.Type.Pallet", "Pallet")
                        .WithMany()
                        .HasForeignKey("PalletId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_inbound_order_lines_pallets_pallet_id");

                    b.HasOne("Trackify.Data.Type.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_inbound_order_lines_products_product_id");

                    b.Navigation("InboundOrder");

                    b.Navigation("Pallet");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Trackify.Data.Type.OutboundOrder", b =>
                {
                    b.HasOne("Trackify.Data.Type.Organization", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_outbound_orders_organizations_customer_id");

                    b.HasOne("Trackify.Data.Type.Organization", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_outbound_orders_organizations_partner_id");

                    b.HasOne("Trackify.Data.Type.StockTakePeriod", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_outbound_orders_stock_take_periods_period_id");

                    b.HasOne("Trackify.Data.Type.PartnerProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_outbound_orders_partner_projects_project_id");

                    b.HasOne("Trackify.Data.Type.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_outbound_orders_users_user_id");

                    b.Navigation("Customer");

                    b.Navigation("Partner");

                    b.Navigation("Period");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Trackify.Data.Type.OutboundOrderLine", b =>
                {
                    b.HasOne("Trackify.Data.Type.OutboundOrder", "OutboundOrder")
                        .WithMany("OrderLines")
                        .HasForeignKey("OutboundOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_outbound_order_lines_outbound_orders_outbound_order_id");

                    b.HasOne("Trackify.Data.Type.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_outbound_order_lines_products_product_id");

                    b.Navigation("OutboundOrder");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Trackify.Data.Type.Pallet", b =>
                {
                    b.HasOne("Trackify.Data.Type.WarehouseLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_pallets_warehouse_locations_location_id");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Trackify.Data.Type.PalletContent", b =>
                {
                    b.HasOne("Trackify.Data.Type.InboundOrder", "InboundOrder")
                        .WithMany("PalletContents")
                        .HasForeignKey("InboundOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pallet_contents_inbound_orders_inbound_order_id");

                    b.HasOne("Trackify.Data.Type.Pallet", "Pallet")
                        .WithMany()
                        .HasForeignKey("PalletId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pallet_contents_pallets_pallet_id");

                    b.HasOne("Trackify.Data.Type.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pallet_contents_products_product_id");

                    b.Navigation("InboundOrder");

                    b.Navigation("Pallet");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Trackify.Data.Type.PalletMovementLog", b =>
                {
                    b.HasOne("Trackify.Data.Type.WarehouseLocation", "DestinationLocation")
                        .WithMany()
                        .HasForeignKey("DestinationLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_pallet_movement_logs_warehouse_locations_destination_location_id");

                    b.HasOne("Trackify.Data.Type.InboundOrder", "OriginOrder")
                        .WithMany()
                        .HasForeignKey("OriginOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pallet_movement_logs_inbound_orders_origin_order_id");

                    b.HasOne("Trackify.Data.Type.Pallet", "Pallet")
                        .WithMany()
                        .HasForeignKey("PalletId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pallet_movement_logs_pallets_pallet_id");

                    b.HasOne("Trackify.Data.Type.WarehouseLocation", "SourceLocation")
                        .WithMany()
                        .HasForeignKey("SourceLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_pallet_movement_logs_warehouse_locations_source_location_id");

                    b.Navigation("DestinationLocation");

                    b.Navigation("OriginOrder");

                    b.Navigation("Pallet");

                    b.Navigation("SourceLocation");
                });

            modelBuilder.Entity("Trackify.Data.Type.PartnerProject", b =>
                {
                    b.HasOne("Trackify.Data.Type.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_partner_projects_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Trackify.Data.Type.StockLevel", b =>
                {
                    b.HasOne("Trackify.Data.Type.StockTakePeriod", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_stock_levels_stock_take_periods_period_id");

                    b.HasOne("Trackify.Data.Type.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_stock_levels_products_product_id");

                    b.HasOne("Trackify.Data.Type.PartnerProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_stock_levels_partner_projects_project_id");

                    b.Navigation("Period");

                    b.Navigation("Product");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Trackify.Data.Type.StockTakePeriod", b =>
                {
                    b.HasOne("Trackify.Data.Type.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_stock_take_periods_organizations_organization_id");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Trackify.Data.Type.User", b =>
                {
                    b.HasOne("Trackify.Data.Type.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_users_organizations_organization_id");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Trackify.Data.Type.WarehouseLocation", b =>
                {
                    b.HasOne("Trackify.Data.Type.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_warehouse_locations_organizations_organization_id");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Trackify.Data.Type.InboundOrder", b =>
                {
                    b.Navigation("OrderLines");

                    b.Navigation("PalletContents");
                });

            modelBuilder.Entity("Trackify.Data.Type.OutboundOrder", b =>
                {
                    b.Navigation("OrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
